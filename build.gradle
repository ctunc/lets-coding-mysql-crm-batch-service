import java.text.SimpleDateFormat

plugins {
    id 'java'
    id 'maven-publish'
    id 'org.springframework.boot' version '2.2.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
}

group = 'com.letscoding.batch.service'
description = 'lets-coding-mysql-crm-batch-service'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
    mavenLocal()
    mavenCentral()
}

dependencyManagement{
    imports{
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Hoxton.SR5"
        mavenBom "com.letscoding.batch-dependencies:lets-coding-batch-dependencies:0.0.1"
    }
}

dependencies {
    implementation 'com.letscoding.lib:lets-coding-db-spring-boot-starter-lib'
    implementation 'com.letscoding.batch:lets-coding-batch-spring-boot-starter'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.postgresql:postgresql'
    implementation 'mysql:mysql-connector-java'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

task copyFiles(type: Copy) {
    from "${rootDir}/Dockerfile","${rootDir}/application.sh"
    into "${buildDir}"
}

bootJar.dependsOn copyFiles

bootJar.enabled = true
jar.enabled = false

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

bootJar {
    mainClassName = 'com.letscoding.batch.application.SpringBatchApplication'
    archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
    manifest {
        attributes(
                'Implementation-Title': project.name,
                'Built-By'       : System.properties['user.name'],
                'Build-Timestamp': new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                'Implementation-Version': archiveVersion,
                'Created-By'     : "Gradle ${gradle.gradleVersion}",
                'Build-Jdk'      : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                'Build-OS'       : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}",
                'Class-Path'     : '/appconfigs/',
                'Spring-Boot-Classes': 'BOOT-INF/classes/',
                'Spring-Boot-Lib': 'BOOT-INF/lib/',
                'Implementation-URL': 'https://projects.spring.io/spring-boot/#/spring-boot-starter-parent/lets-coding-mysql-crm-batch-service'
        )
    }
}

afterEvaluate {
    publishing {
        publications {
            if(project.bootJar.enabled){
                bootJava(MavenPublication) {
                    artifact project.bootJar
                }
            }
            else {
                maven(MavenPublication) {
                    from(components.java)
                }
            }
        }
    }
}